# -*- mode: ruby -*-
# vi: set ft=ruby :

KUBE_RELEASE_VERSION = 'v0.8.2'
KUBE_RELEASE_TARBALL_URL = "https://github.com/GoogleCloudPlatform/kubernetes/releases/download/#{KUBE_RELEASE_VERSION}/kubernetes.tar.gz"

ETCD_RELEASE_VERSION = 'v2.0.0-rc.1'
ETCD_RELEASE_TARBALL_BASENAME = "etcd-#{ETCD_RELEASE_VERSION}-linux-amd64"
ETCD_RELEASE_TARBALL_URL = "https://github.com/coreos/etcd/releases/download/#{ETCD_RELEASE_VERSION}/#{ETCD_RELEASE_TARBALL_BASENAME}.tar.gz"

WEAVE_BASE_ADDR = '10.9'

require 'securerandom'
WEAVE_PASSWORD = SecureRandom.uuid

require 'open-uri'
ETCD_DISCOVERY_TOKEN = open('https://discovery.etcd.io/new').read

Vagrant.configure(2) do |config|
  config.vm.box = "ubuntu/trusty64"

  ips = %W(
    172.30.8.101
    172.30.8.102
    172.30.8.103
  )

  (1..3).each do |i|
    config.vm.define vm_name = "ubuntu-kube-%02d" % i do |config|
      config.vm.hostname = vm_name
      config.vm.network "private_network", ip: ips[i-1]

      config.vm.provision "docker", images: [ "zettio/weave", "zettio/weavetools" ]

      bridge_address_cidr = "#{WEAVE_BASE_ADDR}.#{i}.1/24"
      breakout_route = "#{WEAVE_BASE_ADDR}.0.0/16"

      other_nodes = ips.collect.with_index{ |x,j| x unless j == i }.compact

      config.vm.provision "shell", privileged: true, inline: <<-SHELL
        set -x
        mkdir -p /opt/bin

        curl -s -L #{ETCD_RELEASE_TARBALL_URL} | tar xz -C /opt/
        ln -s /opt/#{ETCD_RELEASE_TARBALL_BASENAME}/etcd /usr/local/sbin/
        ln -s /opt/#{ETCD_RELEASE_TARBALL_BASENAME}/etcd-migrate /usr/local/sbin/
        ln -s /opt/#{ETCD_RELEASE_TARBALL_BASENAME}/etcdctl /usr/local/bin/

        curl -s -L #{KUBE_RELEASE_TARBALL_URL} | tar xz -C /tmp/
        tar xzf /tmp/kubernetes/server/kubernetes-server-linux-amd64.tar.gz -C /opt
        ln -s /opt/kubernetes/server/bin/kubectl /usr/local/bin/
        cp /tmp/kubernetes/examples/guestbook /home/vagrant/guestbook-example
        ln -s /opt/kubernetes/server/bin/kube-apiserver /opt/bin/
        ln -s /opt/kubernetes/server/bin/kube-controller-manager /opt/bin/
        ln -s /opt/kubernetes/server/bin/kubelet /opt/bin/
        ln -s /opt/kubernetes/server/bin/kube-proxy /opt/bin/
        ln -s /opt/kubernetes/server/bin/kube-scheduler /opt/bin/
        cp /tmp/kubernetes/cluster/ubuntu/init_conf/* /etc/init/
        cp /tmp/kubernetes/cluster/ubuntu/initd_scripts/* /etc/init.d/
        cp /tmp/kubernetes/cluster/ubuntu/default_scripts/* /etc/default/

        curl -s -L https://raw.github.com/zettio/weave/master/weave -o /usr/local/sbin/weave
        chmod +x /usr/local/sbin/weave
        weave create-bridge
        ip addr add dev weave #{bridge_address_cidr}
        ip route add #{breakout_route} dev weave scope link
        ip route add 224.0.0.0/4 dev weave

        echo "DOCKER_OPTS='--bridge=weave -r=false'" > /etc/default/docker
        restart docker

        env WEAVE_PASSWORD=#{WEAVE_PASSWORD} weave launch #{other_nodes.join(' ')}

        echo "ETCD_OPTS='${ETCD_OPTS} --discovery #{ETCD_DISCOVERY_TOKEN}'" >> /etc/default/etcd
        start etcd

        echo KUBELET_OPTS="--address=0.0.0.0 --port=10250 --etcd_servers=http://127.0.0.1:4001 --logtostderr=true" >> /etc/default/kubelet
        start kubelet
      SHELL

      if i == 1 then
        config.vm.provision "shell", privileged: true, inline: <<-SHELL
          echo "KUBE_CONTROLLER_MANAGER_OPTS='--master=127.0.0.1:8080 --machines=#{ips.join(',')} --logtostderr=true" > /etc/default/kube-controller-manager
          start kube-apiserver
          start kube-controller-manager
          start kube-proxy
          start kube-scheduler
        SHELL
      end

    end
  end
end
